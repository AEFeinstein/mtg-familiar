import com.github.spotbugs.SpotBugsTask

/*
 * Copyright 2017 Adam Feinstein
 *
 * This file is part of MTG Familiar.
 *
 * MTG Familiar is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * MTG Familiar is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with MTG Familiar.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'com.github.spotbugs'

check.dependsOn 'pmdMain', 'checkstyleMain', 'spotbugsMain'

repositories {
    mavenCentral()
    google()
}

def configDir = "${project.rootDir}/config"

sourceSets {
    // we define `main` sourceSet here, so SpotBugs Gradle Plugin generates `spotbugsMain` task
    main {
        java.srcDirs = ['src/main/java']
    }
}

task compileJava(overwrite: true) {
    dependsOn 'compileDebugJavaWithJavac'
    group = "build"
}

spotbugs {
    toolVersion = '3.1.9'
    ignoreFailures = true
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("$configDir/findbugs/findbugs.filter.xml")
}

tasks.withType(SpotBugsTask) {
    dependsOn 'assembleDebug'
    group = "verification"

    classes = files("${project.rootDir}/mobile/build/intermediates/javac")
    ignoreFailures = true

    // configure automatically generated tasks
    reports {
        xml.enabled = false
        html.enabled = true
        html {
            destination file("$project.buildDir/reports/spotbugs.html")
        }
    }
}

task checkstyleMain(type: Checkstyle, group: "verification", overwrite: true) {
    ignoreFailures = true
    configFile file("$configDir/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("$configDir/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

task pmdMain(type: Pmd, group: "verification", overwrite: true) {
    ignoreFailures = true
    ruleSetFiles = files("$configDir/pmd/pmd.xml")
    reports {
        html.enabled = true
        html {
            destination file("$project.buildDir/reports/pmd.html")
        }
    }
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
}

android {
    compileSdkVersion 29
    buildToolsVersion '29.0.3'
    defaultConfig {
        applicationId "com.gelakinetic.mtgfam"
        minSdkVersion 15
        targetSdkVersion 29
        versionCode 70
        versionName "3.6.4"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.txt'
            //findbugs
        }
        debug {
            applicationIdSuffix '.debug'
            versionNameSuffix '-DEBUG'
        }
    }
    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }
    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }
}

dependencies {

    spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.10.0'
    spotbugsPlugins 'com.mebigfatguy.fb-contrib:fb-contrib:7.4.7'
    //noinspection GradleDependency
    androidTestImplementation 'androidx.annotation:annotation:1.0.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    // Optional -- Hamcrest library
    androidTestImplementation 'org.hamcrest:hamcrest-library:2.2'
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.1.0'

    implementation 'org.apache.commons:commons-lang3:3.9'
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation 'org.apache.commons:commons-collections4:4.4'

    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.gridlayout:gridlayout:1.0.0'

    implementation 'com.github.woxthebox:draglistview:1.7.0'
    implementation 'org.jetbrains:annotations:18.0.0'
    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    implementation 'com.jpardogo.materialtabstrip:library:1.1.1'
    implementation 'com.code-troopers.betterpickers:library:3.1.0'
    implementation 'com.github.machinarius:preferencefragment:0.1.2'
    implementation 'org.jsoup:jsoup:1.12.2'
    implementation 'com.splitwise:tokenautocomplete:3.0.2'
    implementation 'com.google.code.findbugs:annotations:3.0.1u2', {
        // Need to exclude these, or build is broken by:
        //   com.android.dex.DexException: Multiple dex files define Ljavax/annotation/CheckForNull
        exclude module: 'jsr305'
        exclude module: 'jcip-annotations'
    }

    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
    annotationProcessor 'androidx.annotation:annotation:1.1.0'

    implementation 'io.reactivex.rxjava2:rxjava:2.2.18'
    implementation 'com.nytimes.android:cache3:3.1.1', {
        exclude module: 'jsr305'
        exclude module: 'jcip-annotations'
        exclude module: 'rxjava'
    }
    implementation 'com.nytimes.android:store3:3.1.1', {
        exclude module: 'jsr305'
        exclude module: 'jcip-annotations'
        exclude module: 'rxjava'
    }

    implementation 'com.github.castorflex.smoothprogressbar:library:1.1.0'
}
